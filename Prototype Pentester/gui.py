# gui.py

import sys
import json
import subprocess
from PyQt5.QtWidgets import (
    QApplication, QWidget, QLabel, QPushButton, QVBoxLayout,
    QHBoxLayout, QComboBox, QListWidget, QSpinBox, QListWidgetItem, QLineEdit
)

CONFIG_FILE = "shared_config.json"

class CANGui(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("CAN Sender/Logger GUI")

        layout = QVBoxLayout()

        # Bitrate selection
        self.bitrate0 = QComboBox()
        self.bitrate1 = QComboBox()
        for rate in ["125000", "250000", "500000", "1000000"]:
            self.bitrate0.addItem(rate)
            self.bitrate1.addItem(rate)
        layout.addWidget(QLabel("Bitrate kanału 0"))
        layout.addWidget(self.bitrate0)
        layout.addWidget(QLabel("Bitrate kanału 1"))
        layout.addWidget(self.bitrate1)

        # J1939 priorities
        self.prio_list = QListWidget()
        self.prio_list.setSelectionMode(QListWidget.MultiSelection)
        for i in range(0x00, 0x20):
            item = QListWidgetItem(hex(i))
            self.prio_list.addItem(item)
        layout.addWidget(QLabel("Priorytety J1939"))
        layout.addWidget(self.prio_list)

        # Number of frames
        self.num_frames = QSpinBox()
        self.num_frames.setRange(1, 1000)
        self.num_frames.setValue(15)
        layout.addWidget(QLabel("Ilość ramek"))
        layout.addWidget(self.num_frames)

        # Frame interval
        self.frame_interval = QSpinBox()
        self.frame_interval.setRange(1, 1000)
        self.frame_interval.setValue(10)
        layout.addWidget(QLabel("Interwał między ramkami (ms)"))
        layout.addWidget(self.frame_interval)

        # Channel switch frame ID (hex input)
        self.end_frame_id_input = QLineEdit("0x18FF0000")
        layout.addWidget(QLabel("ID zmiany kanału (hex)"))
        layout.addWidget(self.end_frame_id_input)

        # Start button
        self.start_btn = QPushButton("Start")
        self.start_btn.clicked.connect(self.start_processes)
        layout.addWidget(self.start_btn)

        self.setLayout(layout)

    def start_processes(self):
        try:
            end_frame_id = int(self.end_frame_id_input.text(), 16)
        except ValueError:
            print("Nieprawidłowy format ID zmiany kanału. Użyj formatu hex, np. 0x18FF0000")
            return

        config = {
            "bitrate": {
                "0": int(self.bitrate0.currentText()),
                "1": int(self.bitrate1.currentText())
            },
            "priorities": [int(item.text(), 16) for item in self.prio_list.selectedItems()],
            "num_frames": self.num_frames.value(),
            "frame_interval_ms": self.frame_interval.value(),
            "control_frame_id": end_frame_id,
            "control_frame_data": [2, 1, 3, 7, 8, 8, 8, 8]
        }

        with open(CONFIG_FILE, "w") as f:
            json.dump(config, f, indent=4)

        subprocess.Popen([sys.executable, "logger.py"])
        subprocess.Popen([sys.executable, "sender.py"])


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = CANGui()
    window.show()
    sys.exit(app.exec_())
