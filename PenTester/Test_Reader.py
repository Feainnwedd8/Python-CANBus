import can
import signal
import sys
import csv

# Ustawienia dla interfejsu Vector
channel = 1  # Numer kanału do odczytu (upewnij się, że jest poprawny)
bitrate = 250000  # Ustaw bitrate na 500 kbps
#
# Inicjalizacja interfejsu CAN
bus = can.interface.Bus(channel=channel, interface='vector', bitrate=bitrate)

# Flaga do kontrolowania działania programu
running = True

# Otwórz plik CSV do zapisu
with open('received_frames.csv', mode='w', newline='') as csv_file:
    writer = csv.writer(csv_file)  # Użyj csv.writer do prostszego zapisu
    # Funkcja do obsługi odebranych ramek
    def on_message_received(message):
        can_id = hex(message.arbitration_id)
        print(can_id)  # Wyświetl tylko ID ramki
        # Zapisz ID ramki do pliku CSV
        writer.writerow([can_id])  # Zapisz ID jako pojedynczy element listy

    # Funkcja do obsługi sygnału zakończenia
    def signal_handler(sig, frame):
        global running
        running = False
        print("Zatrzymywanie programu...")

    # Ustawienie obsługi sygnału
    signal.signal(signal.SIGINT, signal_handler)

    print("Rozpoczęto odczyt ramek CAN...")

    try:
        while running:
            # Odczyt ramki w trybie nieblokującym
            message = bus.recv(timeout=0.1)  # Timeout ustawiony na 0.1 sekundy
            if message is not None:
                on_message_received(message)
    except Exception as e:
        print(f"Błąd: {e}")
    finally:
        bus.shutdown()
        print("Program zakończony.")