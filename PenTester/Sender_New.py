import subprocess
import time
import can
from can.interface import Bus

ramki: int = 15
PrioList = [0x00000000, 0x04000000, 0x08000000, 0x0C000000, 0x10000000, 0x14000000, 0x18000000, 0x1C000000]
#PrioCurrentUse = [0x18F0010B, 0x18F00503, 0x1CFEAC0B] #debug test
PrioCurrentUse = [0x0C000000, 0x18000000, 0x1C000000]

#bus = Bus(interface='vector', channel=1, bitrate=500000)
#bus = Bus(interface='pcan', channel='PCAN_USBBUS1', bitrate=500000)


def stop_test():
    subprocess.run(["python", "killer.py"])


def switcher():
    bus = Bus(interface='pcan', channel='PCAN_USBBUS1', bitrate=500000)
    msg = can.Message(
        arbitration_id=0x18F0010B,
        dlc = 8,
        data=[2, 1, 3, 7, 2, 1, 3, 7],
        is_extended_id=True
    )
    try:
        bus.send(msg)
        print("Switching channel")
        bus.shutdown()
        time.sleep(10)
        bus.shutdown()


    except can.CanError:
        print("Błąd podczas wysyłania ramki switch.")


def frame_sender(f_interface, f_channel, f_bitrate, f_prio):
    bus = Bus(interface=f_interface, channel=f_channel, bitrate=f_bitrate)
    print(f"Sending CAN frames at priority {hex(f_prio)}")
    end_id = f_prio + 0x00FFFFFF
    while f_prio <= end_id:
        for i in range(ramki):
            msg = can.Message(
                arbitration_id=f_prio + i,
                data=[0, 0, 0, 0, 0, 0, 0, 0],
                is_extended_id=True,
                dlc=8,
                is_rx=False
            )
            bus.send(msg)
            print(f"Wysłano ramkę: {hex(f_prio + i)}")  # debug only

        f_prio += ramki
        time.sleep(0.005)
    bus.shutdown()

def pentester(f_interface1, f_channel1, f_bitrate1, f_interface2, f_channel2, f_bitrate2):
    print("Start of the test sequence")
    for i in range(len(PrioCurrentUse)):
        frame_sender(f_interface1, f_channel1 , f_bitrate1, PrioCurrentUse[i])

    time.sleep(5)
    switcher()
    time.sleep(10)

    print("")
    print("Start of the test sequence after switching")
    for i in range(len(PrioCurrentUse)):
        frame_sender(f_interface2, f_channel2, f_bitrate2, PrioCurrentUse[i])

    time.sleep(10)
    stop_test()


if __name__ == "__main__":
    #pentester('pcan', 'PCAN_USBBUS1' , 500000,'vector', 1, 500000)
    pentester('vector', 0, 500000, 'vector', 1, 500000)
